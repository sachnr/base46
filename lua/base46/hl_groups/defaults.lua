local hls = function(colors, opts)
	return {
		healthSuccess = { bg = colors.green, fg = colors.black },
		NvimInternalError = { fg = colors.red },
		WinSeparator = { fg = colors.line, bg = (opts.bold_vertsplit and colors.line) or "None" },

		-- floating windows
		FloatBorder = { fg = colors.blue },
		NormalFloat = { bg = colors.black },

		-- Defaults
		Normal = { fg = colors.base05, bg = colors.black },
		Bold = { bold = opts.bold },
		Debug = { fg = colors.base08 },
		Directory = { fg = colors.base0D },
		Error = { fg = colors.base00, bg = colors.base08 },
		ErrorMsg = { fg = colors.base08, bg = colors.base00 },
		Exception = { fg = colors.base08 },
		FoldColumn = { fg = colors.base0C, bg = colors.base00 },
		Folded = { fg = colors.base03, bg = colors.base01 },
		IncSearch = { fg = colors.base01, bg = colors.base0B },
		Italic = { italic = opts.italic },
		Macro = { fg = colors.base08 },
		MatchWord = { bg = colors.one_bg, fg = colors.white },
		MatchParen = { bg = colors.one_bg, fg = colors.base09 },
		ModeMsg = { fg = colors.base0B },
		MoreMsg = { fg = colors.base0B },
		Question = { fg = colors.base0D },
		Search = { fg = colors.base05, bg = colors.base01 },
		Substitute = { fg = colors.base01, bg = colors.base0A, sp = "none" },
		SpecialKey = { fg = colors.base03 },
		TooLong = { fg = colors.base08 },
		UnderLined = { fg = colors.base08 },
		Visual = { bg = colors.base02 },
		VisualNOS = { fg = colors.base08 },
		WarningMsg = { fg = colors.base08 },
		WildMenu = { fg = colors.base08, bg = colors.base02 },
		Title = { fg = colors.base0D, sp = "none" },
		Conceal = { fg = colors.base0D, bg = colors.base00 },
		Cursor = { fg = colors.base00, bg = colors.base05 },
		NonText = { fg = colors.base03 },
		LineNr = { fg = colors.grey },
		SignColumn = { fg = colors.base04, sp = "NONE" },
		StatusLine = { fg = colors.base05, bg = colors.statusline_bg },
		StatusLineNC = { fg = colors.base04, bg = colors.statusline_bg },
		WinBar = { fg = colors.base05, bg = colors.black2 },
		WinBarNC = { fg = colors.base04, bg = colors.black2 },
		ColorColumn = { bg = colors.base01, sp = "none" },
		CursorColumn = { bg = colors.base01, sp = "none" },
		CursorLine = { bg = colors.black2, sp = "none" },
		CursorLineNr = { fg = colors.white },
		QuickFixLine = { bg = colors.base01, sp = "none" },
		Pmenu = { fg = colors.white, bg = colors.one_bg },
		PmenuSbar = { bg = colors.one_bg },
		PmenuSel = { bg = colors.pmenu_bg, fg = colors.black },
		PmenuThumb = { bg = colors.grey },
		TabLine = { fg = colors.light_grey, bg = colors.black },
		TabLineFill = { fg = colors.light_grey, bg = colors.black },
		TabLineSel = { fg = colors.white, bg = colors.black },

		-- spell
		SpellBad = { undercurl = opts.undercurl, sp = colors.base08 },
		SpellLocal = { undercurl = opts.undercurl, sp = colors.base0C },
		SpellCap = { undercurl = opts.undercurl, sp = colors.base0D },
		SpellRare = { undercurl = opts.undercurl, sp = colors.base0E },

		-- Diagnostic
		DiagnosticError = { fg = colors.baby_pink },
		DiagnosticWarn = { fg = colors.sun },
		DiagnosticInfo = { fg = colors.cyan },
		DiagnosticHint = { fg = colors.vibrant_green },
		DiagnosticUnderlineError = { underline = opts.underline, sp = colors.red },
		DiagnosticUnderlineWarn = { underline = opts.underline, sp = colors.yellow },
		DiagnosticUnderlineWarning = { underline = opts.underline, sp = colors.yellow },
		DiagnosticUnderlineInfo = { underline = opts.underline, sp = colors.teal },
		DiagnosticUnderlineHint = { underline = opts.underline, sp = colors.green },

		-- Diff highlighting
		DiffAdd = { fg = colors.vibrant_green, bg = colors.base00 },
		DiffChange = { fg = colors.sun, bg = colors.base00 },
		DiffDelete = { fg = colors.baby_pink, bg = colors.base00 },
		DiffText = { fg = colors.light_grey, bg = colors.base00 },
		DiffAdded = { fg = colors.green, bg = colors.base00 },
		DiffFile = { fg = colors.nord_blue, bg = colors.base00 },
		DiffNewFile = { fg = colors.green, bg = colors.base00 },
		DiffLine = { fg = colors.nord_blue, bg = colors.base00 },
		DiffRemoved = { fg = colors.red, bg = colors.base00 },
	}
end
return hls
