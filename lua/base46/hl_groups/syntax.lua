local hls = function(colors, opts)
	return {
		Boolean = { fg = colors.base09 },
		Character = { fg = colors.base08 },
		Comment = { fg = colors.base03 },
		Conditional = { fg = colors.base0E },
		Constant = { fg = colors.base09 },
		Define = { fg = colors.base0E },
		Delimiter = { fg = colors.base0F },
		Error = { fg = colors.base08 },
		Exception = { fg = colors.base08 },
		Float = { fg = colors.base09 },
		Function = { fg = colors.base0D },
		Identifier = { fg = colors.base08 },
		Include = { fg = colors.base0D },
		Keyword = { fg = colors.base0E },
		Label = { fg = colors.base0A },
		Macro = { fg = colors.base0E },
		Number = { fg = colors.base09 },
		Operator = { fg = colors.base05 },
		PreCondit = { fg = colors.base0A },
		PreProc = { fg = colors.base0A },
		Repeat = { fg = colors.base0A },
		Special = { fg = colors.base0C },
		SpecialChar = { fg = colors.base0F },
		SpecialComment = { fg = colors.base03 },
		Statement = { fg = colors.base08 },
		StorageClass = { fg = colors.base0A },
		String = { fg = colors.base0B },
		Structure = { fg = colors.base0E },
		Tag = { fg = colors.base0A },
		Todo = { fg = colors.base0A },
		Type = { fg = colors.base0A },
		Typedef = { fg = colors.base0A },
		Underlined = { underline = opts.underline },
	}
end
return hls
